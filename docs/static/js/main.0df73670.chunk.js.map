{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","anchorEl","setAnchorEl","handleClose","Box","sx","flexGrow","AppBar","position","variant","Toolbar","IconButton","size","edge","color","aria-label","mr","Typography","component","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAoEeA,MA9Df,WAAgB,IAAD,EACqBC,IAAMC,SAAS,MADpC,mBACJC,EADI,KACMC,EADN,KAOLC,EAAc,WAChBD,EAAY,OAEhB,OACI,cAACE,EAAA,EAAD,CAAKC,GAAI,CAACC,SAAU,GAApB,SACI,cAACC,EAAA,EAAD,CAAQC,SAAS,SAASC,QAAQ,QAAlC,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIC,KAAK,QACLC,KAAK,QACLC,MAAM,UACNC,aAAW,OACXV,GAAI,CAACW,GAAI,GALb,SAOI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CAAYR,QAAQ,KAAKS,UAAU,MAAMb,GAAI,CAACC,SAAU,GAAxD,wBAGA,gCACI,cAACK,EAAA,EAAD,CACIC,KAAK,QACLG,aAAW,0BACXI,gBAAc,cACdC,gBAAc,OACdC,QA7BL,SAACC,GAChBpB,EAAYoB,EAAMC,gBA6BET,MAAM,UANV,SAQI,cAAC,IAAD,MAEJ,eAACU,EAAA,EAAD,CACIC,GAAG,cACHxB,SAAUA,EACVyB,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,aAAW,EACXC,gBAAiB,CACbH,SAAU,MACVC,WAAY,SAEhBG,KAAMC,QAAQ/B,GACdgC,QAAS9B,EAbb,UAeI,cAAC+B,EAAA,EAAD,CAAUb,QAASlB,EAAnB,qBACA,cAAC+B,EAAA,EAAD,CAAUb,QAASlB,EAAnB,sCC/CbgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0df73670.chunk.js","sourcesContent":["import './App.css';\nimport {AppBar, Box, IconButton, Menu, MenuItem, Toolbar, Typography} from \"@mui/material\";\nimport MenuIcon from '@mui/icons-material/Menu';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport React from \"react\";\n\nfunction App() {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    return (\n        <Box sx={{flexGrow: 1}}>\n            <AppBar position=\"static\" variant=\"dense\">\n                <Toolbar>\n                    <IconButton\n                        size=\"large\"\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"menu\"\n                        sx={{mr: 2}}\n                    >\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" component=\"div\" sx={{flexGrow: 1}}>\n                        Algorithms\n                    </Typography>\n                    <div>\n                        <IconButton\n                            size=\"large\"\n                            aria-label=\"account of current user\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            onClick={handleMenu}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle/>\n                        </IconButton>\n                        <Menu\n                            id=\"menu-appbar\"\n                            anchorEl={anchorEl}\n                            anchorOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'right',\n                            }}\n                            open={Boolean(anchorEl)}\n                            onClose={handleClose}\n                        >\n                            <MenuItem onClick={handleClose}>Profile</MenuItem>\n                            <MenuItem onClick={handleClose}>My account</MenuItem>\n                        </Menu>\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </Box>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}